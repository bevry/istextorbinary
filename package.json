{
  "title": "Is Text or Binary?",
  "name": "istextorbinary",
  "version": "5.7.0",
  "description": "Determine if a filename and/or buffer is text or binary. Smarter detection than the other solutions.",
  "homepage": "https://github.com/bevry/istextorbinary",
  "license": "MIT",
  "keywords": [
    "bin",
    "binary",
    "browser",
    "check",
    "detect",
    "encoding",
    "es2019",
    "ext",
    "extension",
    "extensions",
    "file",
    "is",
    "is binary",
    "is binary file",
    "is text",
    "is text file",
    "is text or binary",
    "is text or binary file",
    "isbinary",
    "isbinaryfile",
    "istext",
    "istextfile",
    "module",
    "node",
    "path",
    "text",
    "typed",
    "types",
    "typescript"
  ],
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com",
      "githubUsername": "bevry",
      "githubRepository": "istextorbinary",
      "githubSlug": "bevry/istextorbinary",
      "npmPackageName": "istextorbinary"
    }
  },
  "funding": "https://bevry.me/fund",
  "author": "2012+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me), 2011 Benjamin Lupton <b@lupton.cc> (https://balupton.com)",
  "maintainers": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)",
    "Michael Mooring <mike@mdm.cc> (https://github.com/mikeumus)",
    "Rob Loach <robloach@gmail.com> (https://github.com/robloach)"
  ],
  "contributors": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)",
    "Ian Sibner <sibnerian@gmail.com> (https://github.com/sibnerian)",
    "Michael Mooring <mike@mdm.cc> (https://github.com/mikeumus)",
    "Rob Loach <robloach@gmail.com> (https://github.com/robloach)",
    "Sean <sean@albinodrought.com> (https://github.com/AlbinoDrought)",
    "shinnn <snnskwtnb@gmail.com> (https://github.com/shinnn)"
  ],
  "bugs": {
    "url": "https://github.com/bevry/istextorbinary/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevry/istextorbinary.git"
  },
  "engines": {
    "node": ">=10"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ESNext for Node.js with Require for modules",
      "directory": "edition-esnext",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": "14",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2019 for Node.js with Require for modules",
      "directory": "edition-es2019",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es2019",
        "require"
      ],
      "engines": {
        "node": "10 || 12 || 13 || 14",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2019 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    }
  ],
  "types": "./compiled-types/",
  "type": "commonjs",
  "main": "index.js",
  "browser": "edition-browsers/index.js",
  "module": "edition-browsers/index.js",
  "dependencies": {
    "binaryextensions": "4.7.0",
    "editions": "^3.10.0",
    "textextensions": "5.6.0"
  },
  "devDependencies": {
    "@bevry/update-contributors": "^1.12.0",
    "@typescript-eslint/eslint-plugin": "^3.4.0",
    "@typescript-eslint/parser": "^3.4.0",
    "assert-helpers": "^6.13.0",
    "eslint": "^7.3.1",
    "eslint-config-bevry": "^3.13.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "kava": "^5.7.0",
    "make-deno-edition": "^0.14.0",
    "prettier": "^2.0.5",
    "projectz": "^2.10.1",
    "surge": "^0.21.3",
    "typedoc": "^0.17.7",
    "typescript": "^3.9.5",
    "valid-directory": "^2.5.0",
    "valid-module": "^1.7.0"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "yarn run our:compile:deno && yarn run our:compile:edition-browsers && yarn run our:compile:edition-es2019 && yarn run our:compile:edition-esnext && yarn run our:compile:types",
    "our:compile:deno": "make-deno-edition --attempt",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2019 --outDir ./edition-browsers --project tsconfig.json && ( test ! -d edition-browsers/source || ( mv edition-browsers/source edition-temp && rm -Rf edition-browsers && mv edition-temp edition-browsers ) )",
    "our:compile:edition-es2019": "tsc --module commonjs --target ES2019 --outDir ./edition-es2019 --project tsconfig.json && ( test ! -d edition-es2019/source || ( mv edition-es2019/source edition-temp && rm -Rf edition-es2019 && mv edition-temp edition-es2019 ) )",
    "our:compile:edition-esnext": "tsc --module commonjs --target ESNext --outDir ./edition-esnext --project tsconfig.json && ( test ! -d edition-esnext/source || ( mv edition-esnext/source edition-temp && rm -Rf edition-esnext && mv edition-temp edition-esnext ) )",
    "our:compile:types": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --declarationMap --declarationDir ./compiled-types && ( test ! -d compiled-types/source || ( mv compiled-types/source edition-temp && rm -Rf compiled-types && mv edition-temp compiled-types ) )",
    "our:deploy": "echo no need for this project",
    "our:meta": "yarn run our:meta:contributors && yarn run our:meta:docs && yarn run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "yarn run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "yarn run our:release:prepare && yarn run our:release:check-changelog && yarn run our:release:check-dirty && yarn run our:release:tag && yarn run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "yarn run our:clean && yarn run our:compile && yarn run our:test && yarn run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "yarn run our:setup:install",
    "our:setup:install": "/usr/local/bin/yarn install --ignore-engines",
    "our:test": "yarn run our:verify && yarn test",
    "our:verify": "yarn run our:verify:directory && yarn run our:verify:eslint && yarn run our:verify:module && yarn run our:verify:prettier",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "test": "node ./test.js"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  }
}
